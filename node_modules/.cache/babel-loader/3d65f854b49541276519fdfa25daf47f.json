{"remainingRequest":"/Users/rick/Documents/vuejs/vue-advanced/vue-news/node_modules/babel-loader/lib/index.js!/Users/rick/Documents/vuejs/vue-advanced/vue-news/src/store/index.js","dependencies":[{"path":"/Users/rick/Documents/vuejs/vue-advanced/vue-news/src/store/index.js","mtime":1571150882744},{"path":"/Users/rick/Documents/vuejs/vue-advanced/vue-news/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rick/Documents/vuejs/vue-advanced/vue-news/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { fetchNewsList } from \"../api/index.js\";\nimport { fetchAskList } from \"../api/index.js\";\nimport { fetchJobsList } from \"../api/index.js\";\nVue.use(Vuex);\nexport var store = new Vuex.Store({\n  state: {\n    news: [],\n    job: [],\n    ask: []\n  },\n  mutations: {\n    SET_NEWS: function SET_NEWS(state, news) {\n      state.news = news;\n    },\n    SET_JOB: function SET_JOB(state, job) {\n      state.job = job;\n    },\n    SET_ASK: function SET_ASK(state, ask) {\n      state.ask = ask;\n    }\n  },\n  actions: {\n    FETCH_NEWS: function FETCH_NEWS(context) {\n      fetchNewsList().then(function (response) {\n        console.log(response.data);\n        context.commit('SET_NEWS', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    FETCH_JOB: function FETCH_JOB(context) {\n      fetchJobsList().then(function (response) {\n        context.commit('SET_JOB', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    FETCH_ASK: function FETCH_ASK(context) {\n      fetchAskList().then(function (response) {\n        context.commit('SET_ASK', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n});",{"version":3,"sources":["/Users/rick/Documents/vuejs/vue-advanced/vue-news/src/store/index.js"],"names":["Vue","Vuex","fetchNewsList","fetchAskList","fetchJobsList","use","store","Store","state","news","job","ask","mutations","SET_NEWS","SET_JOB","SET_ASK","actions","FETCH_NEWS","context","then","response","console","log","data","commit","catch","error","FETCH_JOB","FETCH_ASK"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT;AACA,SAASC,YAAT;AACA,SAASC,aAAT;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR;AAEA,OAAO,IAAMK,KAAK,GAAG,IAAIL,IAAI,CAACM,KAAT,CAAe;AAChCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,EADH;AAEHC,IAAAA,GAAG,EAAE,EAFF;AAGHC,IAAAA,GAAG,EAAE;AAHF,GADyB;AAMhCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QADO,oBACEL,KADF,EACSC,IADT,EACe;AAClBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,KAHM;AAIPK,IAAAA,OAJO,mBAICN,KAJD,EAIQE,GAJR,EAIa;AAChBF,MAAAA,KAAK,CAACE,GAAN,GAAYA,GAAZ;AACH,KANM;AAOPK,IAAAA,OAPO,mBAOCP,KAPD,EAOQG,GAPR,EAOa;AAChBH,MAAAA,KAAK,CAACG,GAAN,GAAYA,GAAZ;AACH;AATM,GANqB;AAiBhCK,EAAAA,OAAO,EAAE;AACLC,IAAAA,UADK,sBACMC,OADN,EACe;AAChBhB,MAAAA,aAAa,GACRiB,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAL,QAAAA,OAAO,CAACM,MAAR,CAAe,UAAf,EAA2BJ,QAAQ,CAACG,IAApC;AACH,OAJL,EAKKE,KALL,CAKW,UAAAC,KAAK,EAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OAPL;AAQH,KAVI;AAWLC,IAAAA,SAXK,qBAWKT,OAXL,EAWc;AACfd,MAAAA,aAAa,GACRe,IADL,CACU,UAAAC,QAAQ,EAAI;AACdF,QAAAA,OAAO,CAACM,MAAR,CAAe,SAAf,EAA0BJ,QAAQ,CAACG,IAAnC;AACH,OAHL,EAIKE,KAJL,CAIW,UAAAC,KAAK,EAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OANL;AAOH,KAnBI;AAoBLE,IAAAA,SApBK,qBAoBKV,OApBL,EAoBc;AACff,MAAAA,YAAY,GACPgB,IADL,CACU,UAAAC,QAAQ,EAAI;AACdF,QAAAA,OAAO,CAACM,MAAR,CAAe,SAAf,EAA0BJ,QAAQ,CAACG,IAAnC;AACH,OAHL,EAIKE,KAJL,CAIW,UAAAC,KAAK,EAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OANL;AAOH;AA5BI;AAjBuB,CAAf,CAAd","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { fetchNewsList } from '../api/index.js';\nimport { fetchAskList } from '../api/index.js';\nimport { fetchJobsList } from '../api/index.js';\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        news: [],\n        job: [],\n        ask: []\n    },\n    mutations: {\n        SET_NEWS(state, news) {\n            state.news = news\n        },\n        SET_JOB(state, job) {\n            state.job = job\n        },\n        SET_ASK(state, ask) {\n            state.ask = ask\n        }\n    },\n    actions: {\n        FETCH_NEWS(context) {\n            fetchNewsList()\n                .then(response => {\n                    console.log(response.data);\n                    context.commit('SET_NEWS', response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        FETCH_JOB(context) {\n            fetchJobsList()\n                .then(response => {\n                    context.commit('SET_JOB', response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                });\n        },\n        FETCH_ASK(context) {\n            fetchAskList()\n                .then(response => {\n                    context.commit('SET_ASK', response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                });\n        }\n    }\n});"]}]}